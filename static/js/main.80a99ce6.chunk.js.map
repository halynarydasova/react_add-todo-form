{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","classnames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","todosList","setTodosList","setTitle","setUserId","isUserChoosen","setIsUserChoosen","isTitleEmpty","setIsTitleEmpty","todoId","Math","max","action","method","onSubmit","event","preventDefault","trim","handleSubmit","htmlFor","type","placeholder","value","onChange","target","handleTitleChange","parseInt","handleSelectChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80a99ce6.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classnames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classnames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Todos = {\n  todos: Todo[];\n};\nexport const TodoList: React.FC<Todos> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isUserChoosen, setIsUserChoosen] = useState(true);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const todoId = Math.max(...todosList.map(todo => todo.id)) + 1;\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleEmpty(false);\n    if (!event.target.value.trim()) {\n      setIsTitleEmpty(true);\n    }\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const id = parseInt(event.target.value, 10);\n\n    setUserId(id);\n    setIsUserChoosen(true);\n    if (id === 0) {\n      setIsUserChoosen(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!title.trim()) {\n      setIsTitleEmpty(true);\n    }\n\n    if (!getUser(userId)) {\n      setIsUserChoosen(false);\n    }\n\n    if (getUser(userId) && title.trim()) {\n      const todo: Todo = {\n        id: todoId,\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setTodosList([...todosList, todo]);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            id=\"titleInput\"\n            value={title}\n            onChange={(event) => handleTitleChange(event)}\n          />\n          {isTitleEmpty && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={userId}\n            onChange={(event) => handleSelectChange(event)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              const { name, id } = user;\n\n              return (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {!isUserChoosen && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}